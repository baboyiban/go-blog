services:
  backend:
    platform: linux/amd64
    image: chl11wq12/goblog-backend:${VERSION}
    container_name: backend
    build:
      context: ./backend
      args:
        DOMAIN: ${DOMAIN}
    expose:
      - "8080"
    environment:
      - GIN_MODE=release
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - go-blog-network
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    platform: linux/amd64
    image: chl11wq12/goblog-frontend:${VERSION}
    container_name: frontend
    build:
      context: ./frontend
      args:
        DOMAIN: ${DOMAIN}
    expose:
      - "4321"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=4321"
    networks:
      - go-blog-network

  mysql:
    platform: linux/amd64
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: "%"
      MYSQL_DEFAULT_AUTHENTICATION_PLUGIN: caching_sha2_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - go-blog-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u${MYSQL_USER}",
          "-p${MYSQL_PASSWORD}",
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  traefik:
    platform: linux/amd64
    image: traefik:v3.3
    container_name: traefik
    env_file:
      - .env
    environment:
      - EMAIL=${EMAIL}
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --providers.docker.network=go-blog-network
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      # Staging 환경 활성화
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - go-blog-network

volumes:
  mysql-data:
    driver: local
  letsencrypt:
    driver: local

networks:
  go-blog-network:
    driver: bridge
