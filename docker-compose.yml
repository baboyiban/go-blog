version: "3.8"

services:
  backend:
    build: ./backend
    container_name: go-blog-backend
    expose:
      - "8080"
    environment:
      - GIN_MODE=release
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - go-blog-network

  frontend:
    build: ./frontend
    container_name: go-blog-frontend
    expose:
      - "3000"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - go-blog-network

  mysql:
    build: ./mysql
    container_name: go-blog-mysql
    expose:
      - "3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - go-blog-network

  traefik:
    image: traefik:v2.10
    container_name: go-blog-traefik
    env_file: .env
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false" # 라벨이 있는 컨테이너만 노출
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - go-blog-network

volumes:
  mysql-data:
    driver: local

networks:
  go-blog-network:
    driver: bridge
