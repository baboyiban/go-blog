version: "3.8"

services:
  backend:
    build: ./backend
    container_name: go-blog-backend
    expose:
      - "8080"
    environment:
      - GIN_MODE=release
    env_file:
      - .env
    depends_on:
      - mysql
    networks:
      - go-blog-network

  frontend:
    build: ./frontend
    container_name: go-blog-frontend
    expose:
      - "3000"
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - go-blog-network

  mysql:
    build: ./mysql
    container_name: go-blog-mysql
    expose:
      - "3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - go-blog-network

  nginx:
    image: nginx:latest
    container_name: go-blog-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    entrypoint: >
      /bin/sh -c "envsubst '$$DOMAIN $$EMAIL' < /etc/nginx/conf.d/nginx.conf > /etc/nginx/conf.d/nginx.conf && nginx -g 'daemon off;'"
    networks:
      - go-blog-network
    depends_on:
      - certbot
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: go-blog-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - go-blog-network
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local

networks:
  go-blog-network:
    driver: bridge
